#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

ynh_clean_setup () {
	### Remove this function if there's nothing to clean before calling the remove script.
	true
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
path_url="/"
is_public=$YNH_APP_ARG_IS_PUBLIC
title=$YNH_APP_ARG_TITLE
theme=$YNH_APP_ARG_THEME
replace_youtube=$YNH_APP_ARG_REPLACE_YOUTUBE
replace_instagram=$YNH_APP_ARG_REPLACE_INSTAGRAM
if [ $YNH_APP_ARG_PROXY_VIDEOS -eq 1 ]; then
	proxy_videos="true"
else
	proxy_videos="false"
fi
if [ $YNH_APP_ARG_HLS_PLAYBACK -eq 1 ]; then
	hls_playback="true"
else
	hls_playback="false"
fi
if [ $YNH_APP_ARG_INFINITE_SCROLL -eq 1 ]; then
	infinite_scroll="true"
else
	infinite_scroll="false"
fi
hmac_key=$(ynh_string_random --length=64)

app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
ynh_script_progression --message="Validating installation parameters..." --weight=1

arch=$(ynh_detect_arch)

final_path=/opt/yunohost/$app
test ! -e "$final_path" || ynh_die --message="This path already contains a folder"

# Register (book) web path
ynh_webpath_register --app=$app --domain=$domain --path_url=$path_url

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
ynh_script_progression --message="Storing installation settings..." --weight=1

ynh_app_setting_set --app=$app --key=domain --value=$domain
ynh_app_setting_set --app=$app --key=path --value=$path_url
ynh_app_setting_set --app=$app --key=title --value=$title
ynh_app_setting_set --app=$app --key=theme --value=$theme
ynh_app_setting_set --app=$app --key=replace_youtube --value=$replace_youtube
ynh_app_setting_set --app=$app --key=replace_instagram --value=$replace_instagram
ynh_app_setting_set --app=$app --key=proxy_videos --value=$proxy_videos
ynh_app_setting_set --app=$app --key=hls_playback --value=$hls_playback
ynh_app_setting_set --app=$app --key=infinite_scroll --value=$infinite_scroll
ynh_app_setting_set --app=$app --key=hmac_key --value=$hmac_key


#=================================================
# STANDARD MODIFICATIONS
#=================================================
# FIND AND OPEN A PORT
#=================================================
ynh_script_progression --message="Finding an available port..." --weight=1

# Find an available port
port=$(ynh_find_port --port=8080)
ynh_app_setting_set --app=$app --key=port --value=$port

#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression --message="Installing dependencies..." --weight=1

ynh_install_app_dependencies $pkg_dependencies

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Setting up source files..." --weight=1

ynh_app_setting_set --app=$app --key=final_path --value=$final_path
# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source --dest_dir="$final_path"

ynh_setup_source --source_id="nim_$arch" --dest_dir="$final_path/nim-installation" || ynh_die --message="Your server's architecture is not supported"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring NGINX web server..." --weight=1

# Create a dedicated NGINX config
ynh_add_nginx_config

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_script_progression --message="Configuring system user..." --weight=1

# Create a system user
ynh_system_user_create --username=$app
usermod -d $final_path $app 2>&1

#=================================================
# SPECIFIC SETUP
#=================================================
# COMPILE NITTER
#=================================================
ynh_script_progression --message="Compiling Nitter..." --weight=30
pushd "$final_path" || ynh_die
	chown -R $app:$app $final_path
	sudo -u $app "PATH=/opt/yunohost/$app/nim-installation/bin:$(sudo -u $app sh -c 'echo $PATH')" $final_path/nim-installation/bin/nimble build -d:release -y
	sudo -u $app "PATH=/opt/yunohost/$app/nim-installation/bin:$(sudo -u $app sh -c 'echo $PATH')" $final_path/nim-installation/bin/nimble scss -y
	mkdir -p $final_path/tmp
	chown -R root:root $final_path
popd || ynh_die

#=================================================
# SETUP SYSTEMD
#=================================================
ynh_script_progression --message="Configuring a systemd service..." --weight=1

# Create a dedicated systemd config
ynh_add_systemd_config

#=================================================
# ADD A CONFIGURATION
#=================================================
ynh_add_config --template="nitter.conf" --destination="$final_path/nitter.conf"

#=================================================
# GENERIC FINALIZATION
#=================================================
# SECURE FILES AND DIRECTORIES
#=================================================
# Set permissions to app files
chown -R root:$app $final_path
chown -R $app:$app $final_path/tmp
chmod -R g=u,g-w,o-rwx $final_path
setfacl -n -m user:www-data:rx $final_path
setfacl -n -R -m user:www-data:rx -m default:user:www-data:rx $final_path/public

#=================================================
# INTEGRATE SERVICE IN YUNOHOST
#=================================================
ynh_script_progression --message="Integrating service in YunoHost..." --weight=1

yunohost service add $app --description="Alternative front-end for Twitter that respects your privacy" --log="/var/log/$app/$app.log"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..." --weight=1

# Start a systemd service
ynh_systemd_action --service_name=$app --action="start" --log_path="/var/log/$app/$app.log"

#=================================================
# SETUP SSOWAT
#=================================================
ynh_script_progression --message="Configuring permissions..." --weight=1

# Make app public if necessary
if [ $is_public -eq 1 ]
then
	# Everyone can access the app.
	# The "main" permission is automatically created before the install script.
	ynh_permission_update --permission="main" --add="visitors"
fi

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading NGINX web server..." --weight=1

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed" --last
